angular.module("abcdlacosEternos",["ngResource","ui.router","ui.mask","ngFileUpload","ngAnimate","ngSanitize","ui.bootstrap","AdmPartners","angular-loading-bar","720kb.datepicker"]).config(["$urlRouterProvider","$stateProvider","$httpProvider",function($urlRouterProvider,$stateProvider,$httpProvider,Profile,RouteAccessService){$httpProvider.interceptors.push("meuInterceptor"),$stateProvider.state("login",{url:"/login",templateUrl:"partials/login.html",controller:"LoginController"}).state("admin",{url:"/admin",templateUrl:"partials/login.html",controller:"LoginController"}).state("dash",{url:"",abstract:!0,templateUrl:"partials/layout.html",controller:"PerfilController"}).state("dashboard",{url:"/dashboard",parent:"dash",templateUrl:"partials/dashboard.html",controller:"DashboardController"}).state("produto",{url:"/produto",templateUrl:"partials/upload.html",controller:"uploadController"}).state("dash.partner",{url:"/partner",templateUrl:"partials/partner.html",controller:"PartnerController"}).state("dash.partner/:partnerId",{url:"/partner/:partnerId",templateUrl:"partials/partner.html",controller:"PartnerController"}).state("dash.partners",{url:"/partners",templateUrl:"partials/partners.html",controller:"PartnersController",resolve:{checkRoles:function(RouteAccessService,Profile){return RouteAccessService.checkRoles(Profile.isAdmin())}}}).state("dash.offer/:offerId",{url:"/offer/:offerId",templateUrl:"partials/partner-offer-tab.html",controller:"OfferController"}).state("dash.offers",{url:"/offers/:partnerId",templateUrl:"partials/partner-offer-list.html",controller:"OffersController"}).state("dash.vouchersgenerated",{url:"/vouchersgenerated",templateUrl:"partials/vouchers-generated.html",controller:"vouchersController"}).state("dash.vouchersvalidate",{url:"/vouchersvalidate",templateUrl:"partials/voucher-validate.html",controller:"VoucherController"}).state("dash.vouchersvalidated",{url:"/vouchersvalidated",templateUrl:"partials/vouchers-validated.html",controller:"vouchersValidatedController"}).state("user",{url:"/user",parent:"dash",templateUrl:"partials/usernew.html",controller:"UserController"}).state("user/:userId",{url:"/user/:userId",parent:"dash",templateUrl:"partials/user.html",controller:"UserController"}).state("users",{url:"/users",parent:"dash",templateUrl:"partials/users.html",controller:"UsersController",resolve:{checkRoles:function(RouteAccessService,Profile){return RouteAccessService.checkRoles(Profile.isAdmin())}}}).state("/userspartners/:userId",{url:"/userspartners/:userId",parent:"dash",templateUrl:"partials/user.html",controller:"UserController"}),$urlRouterProvider.otherwise("/login")}]),angular.module("abcdlacosEternos").value("config",{baseUrl:"http://localhost/:8080"}),angular.module("AdmPartners",["ngResource"]).factory("recursoPartner",["$resource",function($resource){return $resource("/adm/partners/:partnerId",null,{update:{method:"PUT"}})}]).factory("cadastroPartner",["recursoPartner","$q","$rootScope",function(recursoPartner,$q,$rootScope){var service={};return service.cadastrar=function(partner){return $q(function(resolve,reject){partner._id?recursoPartner.update({partnerId:partner._id},partner,function(){$rootScope.$broadcast("partnerCadastrada"),resolve({mensagem:"Partner "+partner.name+" successfully included",inclusao:!1})},function(erro){console.log(erro),reject({mensagem:"Partner Error Not Updated "+partner.name})}):recursoPartner.save(partner,function(){$rootScope.$broadcast("partnerCadastrada"),resolve({mensagem:"Partner "+partner.name+" successfully included",inclusao:!0})},function(erro){console.log(erro),reject({mensagem:"Partner error not included "+partner.name})})})},service}]).factory("recursoPartners",["$resource",function($resource){return $resource("/partners")}]),angular.module("abcdlacosEternos").service("DashboardService",["$http",function($http){this.VoucherAdmGenerated=function(){return $http.get("/dashboard/adm")},this.AdmTotalOffers=function(){return $http.get("/dashboard/admoffers")},this.AdmVouchersValided=function(){return $http.get("/dashboard/admvouchersvalided")},this.AdmExpiredVouchers=function(partner_id){return $http.get("/dashboard/admexpiredvouchers")},this.VoucherPartnerGenerated=function(partner_id){return $http.get("/dashboard/partnerVouchersGenerated/"+partner_id)},this.PartnerTotalVouchersValided=function(partner_id){return $http.get("dashboard/partnerTotalVouchersValided/"+partner_id)},this.PartnerExpiredVouchers=function(partner_id){return $http.get("/dashboard/partnerExpiredVouchers?partner_id="+partner_id)},this.PartnerTotalOffers=function(partner_id){return $http.get("/dashboard/partnerTotalOffers?partner_id="+partner_id)}}]),angular.module("abcdlacosEternos").factory("meuInterceptor",["$location","$q",function($location,$q){return{responseError:function(resposta){return 401==resposta.status&&$location.path("#/login"),$q.reject(resposta)}}}]),angular.module("abcdlacosEternos").factory("ModalAlertService",["$uibModal",function($uibModal){return{messageSuccess:function(size){return $uibModal.open({animation:!0,template:"<div class='alert alert-success text-center alert-dismissible' role='alert'><a class='close' data-dismiss='alert' aria-label='close'>&times;</a><strong>Success...</strong></div>"})},messageError:function(size){return $uibModal.open({animation:!0,template:"<div class='alert alert-danger text-center alert-dismissible' role='alert'><a class='close' data-dismiss='alert' aria-label='close'>&times;</a><strong>Error...</strong></div>"})},messageDel:function(size){return $uibModal.open({animation:!0,templateUrl:"partials/modalDel.html",controller:"ModalController"})}}}]),angular.module("abcdlacosEternos").factory("offerService",["$http","Upload","config","$stateParams",function($http,Upload,config,$stateParams){var _getListPartnersGeo=function(){return $http.get("/partnerslocation")},_listOffer=function(partnerId){return $http.get("/offers/"+partnerId)},_uploadOffer=function(file,offerId,tipo){return file.upload=Upload.upload({method:"POST",url:"/offer/upload",data:{file:file,_id:offerId,tipo:tipo}})},_saveOffer=function(offer,partnerId){return $http.post("/offer/"+partnerId,offer)},_updateOffer=function(offer,offerId){return $http.put("/offer/"+offerId,offer)},_getIdOffer=function(offerId,partnerId){return $http.get("/offer?offerId="+offerId+"&partnerId="+partnerId)},_getIdOfferPhotos=function(offerId,partnerId){return $http.get("/offerphotos?offerId="+offerId+"&partnerId="+partnerId)};return _offerDel=function(offerId,partnerId){return $http.delete("/offer?offerId="+offerId+"&partnerId="+partnerId)},{getListPartnerGeo:_getListPartnersGeo,uploadOffer:_uploadOffer,saveOffer:_saveOffer,updateOffer:_updateOffer,listOffer:_listOffer,getIdOffer:_getIdOffer,getIdOfferPhotos:_getIdOfferPhotos,offerDel:_offerDel}}]),angular.module("abcdlacosEternos").factory("Profile",function(){function setRoles(roles){this.roles=roles}function isAdmin(){return contains(this.roles,"ADMIN")}function isVisualization(){return contains(this.roles,"VISUALIZATION")}function isModification(){return contains(this.roles,"MODIFICATION")}function isPartner(){return contains(this.roles,"PARTNER")}function contains(array,element){return array&&array.indexOf(element)>-1}return{setRoles:setRoles,isAdmin:isAdmin,isVisualization:isVisualization,isModification:isModification,isPartner:isPartner}}),angular.module("abcdlacosEternos").service("RouteAccessService",function(){this.checkRoles=function(access){access||$location.path("/")}}),angular.module("abcdlacosEternos").service("sharedProperties",function(){var property={};return{getProperty:function(){return property},setProperty:function(value){property=value}}}),angular.module("abcdlacosEternos").service("UserService",["$http",function($http){this.List=function(){return $http.get("/users")},this.SaveUser=function(user){return $http.post("/user",user)},this.UpdateUser=function(userId,user){return $http.put("/user/"+userId,user)},this.GetUser=function(userId){return $http.get("/user/"+userId)},this.GetUserPartner=function(userId){return $http.get("/userspartners/"+userId)},this.DelUser=function(userId){return $http.delete("/user/"+userId)}}]),angular.module("abcdlacosEternos").factory("VoucherService",["$http","Upload","config","$stateParams",function($http,Upload,config,$stateParams){return{validVoucher:function(codvoucher){return $http.get("/voucher?codvoucher="+codvoucher)},listVoucher:function(partner_id){return $http.get("/partnersvouchers?partner_id="+partner_id)},listVouchersgeneratedAdm:function(){return $http.get("/adm/partnersvouchers")},listVouchersValidatedAdm:function(query){return $http.get("/adm/vouchersvalidated?partner_id="+query._id+"&date_initial="+query.date_initial+"&date_end="+query.date_end)}}}]),angular.module("abcdlacosEternos").controller("DashboardController",["$scope","$http","$stateParams","$location","UserService","ModalAlertService","Profile","DashboardService",function($scope,$http,$stateParams,$location,UserService,ModalAlertService,Profile,DashboardService){$scope.user={},$scope.mensagem="",$scope.profile=Profile,$scope.partnerExpiredVouchers=0,$scope.partnerTotalVouchersValided=0,$scope.voucherPartnerGenerated=0,$scope.PartnerTotalVouchers=0,$scope.admVouchersValided=0,$scope.admTotalOffers=0,$scope.admGenerated=0,$scope.admExpiredVouchers=0;var userTogo=JSON.parse(sessionStorage.getItem("Togo"));"ADMIN"==userTogo.profile?(DashboardService.VoucherAdmGenerated().success(function(vouchers){vouchers.length>0&&($scope.admGenerated=vouchers[0].count)}).error(function(error){$scope.mensagem="Error writing",$scope.status="alert alert-danger"}),DashboardService.AdmTotalOffers().success(function(offers){console.log(offers),offers.length>0&&($scope.admTotalOffers=offers[0].count)}).error(function(error){$scope.mensagem="Error writing",$scope.status="alert alert-danger"}),DashboardService.AdmVouchersValided().success(function(vouchers){vouchers.length>0&&($scope.admVouchersValided=vouchers[0].count)}).error(function(error){$scope.mensagem="Error writing",$scope.status="alert alert-danger"}),DashboardService.AdmExpiredVouchers().success(function(vouchers){vouchers.length>0&&($scope.admExpiredVouchers=vouchers[0].count)}).error(function(error){$scope.mensagem="Error writing",$scope.status="alert alert-danger"})):(DashboardService.VoucherPartnerGenerated(userTogo.partner_id).success(function(vouchers){vouchers.length>0&&($scope.voucherPartnerGenerated=vouchers[0].count,console.log($scope.voucherPartnerGenerated))}).error(function(error){$scope.mensagem="Error writing",$scope.status="alert alert-danger"}),DashboardService.PartnerTotalVouchersValided(userTogo.partner_id).success(function(vouchers){vouchers.length>0&&($scope.partnerTotalVouchersValided=vouchers[0].count)}).error(function(error){$scope.mensagem="Error writing",$scope.status="alert alert-danger"}),DashboardService.PartnerExpiredVouchers(userTogo.partner_id).success(function(vouchers){vouchers.length>0&&($scope.partnerExpiredVouchers=vouchers[0].count)}).error(function(error){$scope.mensagem="Error writing",$scope.status="alert alert-danger"}),DashboardService.PartnerTotalOffers(userTogo.partner_id).success(function(vouchers){vouchers.length>0&&($scope.PartnerTotalVouchers=vouchers[0].count)}).error(function(error){$scope.mensagem="Error writing",$scope.status="alert alert-danger"}))}]),angular.module("abcdlacosEternos").controller("LoginController",["$rootScope","$scope","$http","$location","$state","$window","Profile",function($rootScope,$scope,$http,$location,$state,$window,Profile){$scope.usuario={},$scope.mensagem="";$location.url();$scope.autenticar=function(){var usuario=$scope.usuario;$scope.mensagem={},$http.post("/autentica",usuario).then(function(){$http.get("/profile").success(function(profile){var user=profile;Profile.setRoles(user.profile),sessionStorage.setItem("Togo",JSON.stringify(user)),$location.path("/dashboard")}).error(function(){})},function(){$scope.mensagem="User/password Invalid!"})},$scope.logout=function(){delete $window.sessionStorage.token,$location.path("#/login")}}]),angular.module("abcdlacosEternos").controller("mapsController",["$scope","$http","$stateParams","$location",function($scope,$http,$stateParams,$location){!function(){$http.get("/parceiros/location").success(function(data){$scope.localizacao=data,console.log($scope.localizacao)}).error(function(erro){console.log(erro)})}(),$scope.titulo="Chupa que é de uva"}]),angular.module("abcdlacosEternos").controller("ModalController",["$scope","$uibModal","$uibModalInstance","sharedProperties",function($scope,$uibModal,$uibModalInstance,sharedProperties){$scope.cancel=function(){$uibModalInstance.dismiss("cancel"),sharedProperties.setProperty(!1)},$scope.ok=function(){sharedProperties.setProperty(!0),$uibModalInstance.close()}}]),angular.module("abcdlacosEternos").controller("OfferController",["$scope","$stateParams","$location","offerService","$timeout","$rootScope",function($scope,$stateParams,$location,offerService,$timeout,$rootScope){$scope.offer={price:0,percentagem:0,percentagemadult:0,amountadult:0,priceperchild:0,percentagemperchild:0,percentagemchild:0,amountchild:0},$scope.mensagem="",$scope.picFile={};var offerId=$stateParams.offerId,partnerId=$stateParams.partnerId;$stateParams.offerId&&offerService.getIdOffer(offerId,partnerId).success(function(data){$scope.offer=data}).error(function(erro){console.log("Erro List")}),$scope.saveOffers=function(offer,produtoIndex){offer._id?offerService.updateOffer(offer,offerId).success(function(retorno){console.log("Gravado com sucesso!!")}).error(function(erro){console.log("Erro ao gravar:"+erro)}):offerService.saveOffer(offer,$stateParams.offerId).success(function(){delete $scope.offer,$scope.mensagem="Salvo com sucesso"}).error(function(erro){console.log("Erro ao gravar:"+erro),$scope.mensagem="Erro ao gravar"})}}]),angular.module("abcdlacosEternos").controller("OffersController",["$scope","$stateParams","$location","offerService","$timeout","$rootScope","$uibModal","$log","$document","ModalAlertService",function($scope,$stateParams,$location,offerService,$timeout,$rootScope,$uibModal,$log,$document,ModalAlertService){$scope.produtos=[],$scope.mensagem="",$scope.offer={price:0,percentagem:0,percentagemadult:0,amountadult:0,priceperchild:0,percentagemperchild:0,percentagemchild:0,amountchild:0},$rootScope.offers=[],$scope.offerPhoto={},$scope.file={};$scope.offer.price,$scope.offer.percentage;$scope.calcPercentage=function(price,percentage){return price-price*(percentage/100)},$scope.calcPercentageadult=function(price,percentagemadult,amountadult){return amountadult*(price-price*(percentagemadult/100))},$scope.calcPercentageperchild=function(priceperchild,percentageperchild){return priceperchild-priceperchild*(percentageperchild/100)},$scope.calcPercentagechild=function(priceperchild,percentagemchild,amountchild){return amountchild*(priceperchild-priceperchild*(percentagemchild/100))},$scope.dpOpenStatus={},$scope.setDpOpenStatus=function(id){$scope.dpOpenStatus[id]=!0},offerService.listOffer($stateParams.partnerId).success(function(data){$rootScope.offers=data}).error(function(erro){console.log("Erro List")}),$scope.getIdOffer=function(offer){$scope.offer=offer},$scope.offerDel=function(offer){offer._id&&offerService.offerDel(offer._id,$stateParams.partnerId).success(function(){ModalAlertService.messageSuccess("lg");var offerNew=$scope.offers.filter(function(element){return offer._id!=element._id});$rootScope.offers=offerNew}).error(function(erro){ModalAlertService.messageError("lg")})},$scope.modalOfferUpdate=function(size){$scope.amDisabled=!1,$scope.modalOfferInstance=$uibModal.open({scope:$scope,animation:!0,templateUrl:"partials/offer-modal.html",controller:"ModalInstanceCtrl",size:size})},$scope.modalNewOffer=function(size){$scope.amDisabled=!0,$scope.offer={price:0,percentagem:0,percentagemadult:0,amountadult:0,priceperchild:0,percentagemperchild:0,percentagemchild:0,amountchild:0},$scope.mensagem={},$scope.modalOfferClose=$uibModal.open({scope:$scope,animation:!0,templateUrl:"partials/offer-modal.html",controller:"ModalInstanceCtrl",size:size})}}]).controller("ModalInstanceCtrl",["$scope","$rootScope","$uibModalInstance","offerService","$stateParams","$timeout","Upload","ModalAlertService",function($scope,$rootScope,$uibModalInstance,offerService,$stateParams,$timeout,Upload,ModalAlertService){function offerGetId(){offerService.getIdOffer($scope.offer._id,$stateParams.partnerId).success(function(data){$scope.offerPhoto=data}).error(function(erro){console.log("Erro List")})}$scope.updateOffer=function(offer){offer._id?offerService.updateOffer(offer,$stateParams.partnerId).success(function(){$scope.offer={},$scope.modalOfferInstance.close(),ModalAlertService.messageSuccess("lg")}).error(function(error){ModalAlertService.messageError("lg")}):offerService.saveOffer(offer,$stateParams.partnerId).success(function(retorno){$scope.modalOfferClose.close(),ModalAlertService.messageSuccess("lg"),$rootScope.offers=retorno,$scope.offer={}}).error(function(erro){ModalAlertService.messageError("lg")})},$scope.getOfferPhotoView=function(){console.log("Clicado Aba Photo"),offerGetId()},$scope.uploadPic=function(file){var cont=!0;file.name.length&&!0===cont&&(cont=!1,file.upload=Upload.upload({method:"POST",url:"/offerupload/"+$scope.offer._id,data:{file:file,tipo:"thumbnail"}})),file.upload.then(function(response){$timeout(function(){file.result=response.data,$scope.file={},offerGetId()})},function(response){response.status>0&&($scope.errorMsg=response.status+": "+response.data)},function(evt){file.progress=Math.min(100,parseInt(100*evt.loaded/evt.total))})},$scope.slide1=function(file){var cont=!0;file.name.length&&!0===cont&&(cont=!1,file.upload=Upload.upload({method:"POST",url:"/offerupload/"+$scope.offer._id,data:{file:file,tipo:"slide1"}})),file.upload.then(function(response){$timeout(function(){file.result=response.data,$scope.file={},offerGetId()})},function(response){response.status>0&&($scope.errorMsg=response.status+": "+response.data)},function(evt){file.progress=Math.min(100,parseInt(100*evt.loaded/evt.total))})},$scope.slide2=function(file){var cont=!0;file.name.length&&!0===cont&&(cont=!1,file.upload=Upload.upload({method:"POST",url:"/offerupload/"+$scope.offer._id,data:{file:file,tipo:"slide2"}})),file.upload.then(function(response){$timeout(function(){file.result=response.data,$scope.file={},offerGetId()})},function(response){response.status>0&&($scope.errorMsg=response.status+": "+response.data)},function(evt){file.progress=Math.min(100,parseInt(100*evt.loaded/evt.total))})},$scope.slide3=function(file){var cont=!0;file.name.length&&!0===cont&&(cont=!1,file.upload=Upload.upload({method:"POST",url:"/offerupload/"+$scope.offer._id,data:{file:file,tipo:"slide3"}})),file.upload.then(function(response){$timeout(function(){file.result=response.data,$scope.file={},offerGetId()})},function(response){response.status>0&&($scope.errorMsg=response.status+": "+response.data)},function(evt){file.progress=Math.min(100,parseInt(100*evt.loaded/evt.total))})},$scope.ok=function(){$scope.offer={},$uibModalInstance.close()},$scope.cancel=function(){$scope.offer={},$uibModalInstance.dismiss("cancel")}}]),angular.module("abcdlacosEternos").controller("PartnerController",["$scope","$http","$stateParams","$location","cadastroPartner","recursoPartner","ModalAlertService","Profile",function($scope,$http,$stateParams,$location,cadastroPartner,recursoPartner,ModalAlertService,Profile){$scope.partner={},$scope.mensagem="",$scope.profile=Profile,$stateParams.partnerId&&recursoPartner.get({partnerId:$stateParams.partnerId},function(partner){$scope.partner=partner,$scope.partner.localizacao.latitude=partner.localizacao.coordinates[0],$scope.partner.localizacao.longitude=partner.localizacao.coordinates[1]},function(erro){$scope.mensagem="Não foi possível obter a partner"}),$scope.submeter=function(){$scope.formulario.$valid&&($scope.partner.localizacao={type:"Point",coordinates:[$scope.partner.localizacao.latitude,$scope.partner.localizacao.longitude]},cadastroPartner.cadastrar($scope.partner).then(function(dados){$scope.mensagem=dados.mensagem,ModalAlertService.messageSuccess("lg"),dados.inclusao&&($scope.partner={}),delete $scope.partner,$scope.formulario.$setPristine()}).catch(function(erro){$scope.mensagem=erro.mensagem,ModalAlertService.messageError("lg")}))},$scope.remover=function(partner){recursoPartner.delete({partnerId:partner._id},function(){var indiceDoPartner=$scope.partners.indexOf(partner);$scope.partners.splice(indiceDoPartner,1),$scope.mensagem="Partners removido com sucesso!",delete $scope.partner},function(erro){console.log(erro),$scope.mensagem="Não foi possível apagar o parceiro "+partner.name})}}]),angular.module("abcdlacosEternos").controller("PartnersController",["$scope","$stateParams","$location","recursoPartner","Profile",function($scope,$stateParams,$location,recursoPartner,Profile){$scope.partners=[],$scope.filtro="",$scope.mensagem="",$scope.profile=Profile,recursoPartner.query(function(partners){$scope.partners=partners},function(erro){}),$scope.remover=function(partner){recursoPartner.delete({partnerId:partner._id},function(){var indiceDoPartner=$scope.partners.indexOf(partner);$scope.partners.splice(indiceDoPartner,1),$scope.mensagem="Partners "+partner.name+" removido com sucesso!"},function(erro){$scope.mensagem="Não foi possível apagar o parceiro "+partner.name})}}]),angular.module("abcdlacosEternos").controller("PerfilController",["$scope","$http","$stateParams","$location","Profile",function($scope,$http,$stateParams,$location,Profile){var userTogo=JSON.parse(sessionStorage.getItem("Togo"));Profile.setRoles(userTogo.profile),$scope.profile=Profile,$scope.UserProfile=userTogo}]),angular.module("abcdlacosEternos").controller("uploadController",["$scope","$http","$stateParams","$location",function($scope,$http,$stateParams,$location){$scope.upload=function(file){$http({method:"POST",url:"/parceiro/produto",data:file,headers:{"Content-Type":"application/json; charset=utf-8"}}).success(function(data){console.log("Arquivo deleta com sucesso: ")}).error(function(error){console.log(error)})}}]),angular.module("abcdlacosEternos").controller("UserController",["$scope","$http","$stateParams","$location","UserService","ModalAlertService","Profile",function($scope,$http,$stateParams,$location,UserService,ModalAlertService,Profile){$scope.user={},$scope.mensagem="",$scope.profile=Profile,$stateParams.userId&&UserService.GetUser($stateParams.userId).success(function(user){$scope.user=user}).error(function(error){$scope.mensagem="Error writing",$scope.status="alert alert-danger"}),$scope.submeter=function(){$scope.user._id?UserService.UpdateUser($stateParams.userId,$scope.user).success(function(){$scope.user={},ModalAlertService.open("lg")}).error(function(error){$scope.mensagem="Error writing",$scope.status="alert alert-danger"}):UserService.SaveUser($scope.user).success(function(retorno){$scope.mensagem="Salve successfully",$scope.status="alert alert-success",$scope.user={}}).error(function(erro){$scope.mensagem="Error writing",$scope.status="alert alert-danger"})}}]),angular.module("abcdlacosEternos").controller("UsersController",["$scope","$http","$stateParams","$location","UserService","ModalAlertService","sharedProperties",function($scope,$http,$stateParams,$location,UserService,ModalAlertService,sharedProperties){$scope.users=[],$scope.filtro="",$scope.mensagem="",sharedProperties.setProperty(!1),UserService.List().success(function(data){$scope.users=data}).error(function(erro){console.log("Erro List")}),$stateParams.userId&&UserService.GetUserPartner().success(function(data){$scope.users=data}).error(function(erro){console.log("Erro List")}),$scope.DelUser=function(user){var confirma=confirm("DELETE USER:  \n\n EMAIL:  "+user.email+"?");user._id&&confirma&&UserService.DelUser(user._id).success(function(){var UserList=[];UserList=$scope.users.filter(function(element){return user._id!=element._id}),$scope.users=UserList}).error(function(erro){ModalAlertService.messageError("lg")})}}]),angular.module("abcdlacosEternos").controller("VoucherController",["$scope","$http","$stateParams","$location","VoucherService","$timeout",function($scope,$http,$stateParams,$location,VoucherService,$timeout){$scope.codvoucher="",$scope.codvoucherAlert="",$scope.mensagem="",$scope.validVoucher=function(){codvoucher=$scope.codvoucher,codvoucher&&VoucherService.validVoucher(codvoucher).success(function(retorno){!0===retorno.status?($scope.mensagem="Valided successfully",$scope.status="alert alert-success",$scope.codvoucherAlert=codvoucher,$scope.codvoucher="",$timeout(function(){$scope.mensagem=""},4e3)):($scope.mensagem="Voucher not found!",$scope.status="alert alert-danger",$scope.codvoucherAlert=codvoucher,$timeout(function(){$scope.mensagem=""},4e3))}).error(function(error){$scope.mensagem="Error writing",$scope.status="alert alert-danger"})}}]),angular.module("abcdlacosEternos").controller("vouchersController",["$scope","$stateParams","$location","VoucherService","Profile",function($scope,$stateParams,$location,VoucherService,Profile){$scope.filtro="",$scope.mensagem="",$scope.profile=Profile;var userTogo=JSON.parse(sessionStorage.getItem("Togo")),partner_id=userTogo.partner_id;"PARTNER"==userTogo.profile?VoucherService.listVoucher(partner_id).success(function(vouchers){$scope.vouchers=vouchers,$scope.mensagem="Voucher not found!",$scope.status="alert alert-danger"}).error(function(error){$scope.mensagem="Error writing",$scope.status="alert alert-danger"}):VoucherService.listVouchersgeneratedAdm().success(function(vouchers){$scope.vouchers=vouchers,$scope.mensagem="Voucher not found!",$scope.status="alert alert-danger"}).error(function(error){$scope.mensagem="Error writing",$scope.status="alert alert-danger"})}]),angular.module("abcdlacosEternos").controller("vouchersValidatedController",["$scope","$stateParams","$location","VoucherService","Profile","$resource",function($scope,$stateParams,$location,VoucherService,Profile,$resource){$scope.filtro="",$scope.mensagem="",$scope.query={},$scope.profile=Profile;var Partners=$resource("/adm/partners"),userTogo=JSON.parse(sessionStorage.getItem("Togo"));"PARTNER"==userTogo.profile&&($scope.query._id=userTogo.partner_id),$scope.findVouchersValidated=function(){$scope.totalpayable=0,$scope.paytogo=0;var commission={type:"",value:0};VoucherService.listVouchersValidatedAdm($scope.query).success(function(vouchers){if($scope.vouchers=vouchers,$scope.partners.forEach(function(element){element._id==$scope.query._id&&(commission.type=element.commission,commission.value=element.value)}),vouchers.forEach(function(elemento){$scope.totalpayable+=elemento.vouchers.totalpayable}),"Percentagem"==commission.type)$scope.paytogo=$scope.totalpayable*(commission.value/100);else{var itens=vouchers.length;$scope.paytogo=commission.value*itens}$scope.mensagem="Voucher not found!",$scope.status="alert alert-danger"}).error(function(error){$scope.mensagem="Error writing",$scope.status="alert alert-danger"})},Partners.query(function(partners){$scope.partners=partners})}]);